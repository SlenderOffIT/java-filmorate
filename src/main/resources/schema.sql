drop table if exists FILM, "USER", GENRE_FILM, GENRE, RATING_MPA, LIKE_FILM, FRIENDS;

CREATE TABLE IF NOT EXISTS GENRE (
	id_genre integer generated by default as identity not null primary key,
	name_genre varchar(15) NOT NULL
);

CREATE TABLE IF NOT EXISTS RATING_MPA (
	id_rating_mpa integer generated by default as identity not null primary key,
	name_mpa varchar(5) not null
);

CREATE TABLE IF NOT EXISTS FILM (
	id integer generated by default as identity not null primary key,
	rate integer,
	duration integer NOT NULL,
	name varchar(150) NOT NULL,
	description varchar(600),
	release_date TIMESTAMP NOT NULL,
	mpa integer not null references RATING_MPA (id_rating_mpa) on DELETE cascade on update cascade
);

CREATE TABLE IF NOT EXISTS "USER" (
	id integer generated by default as identity not null primary key,
	name varchar(100),
	email varchar(100) NOT NULL,
	login varchar(50) NOT NULL,
	birthday TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS LIKE_FILM (
	id_film integer not null references film (id) on delete cascade on UPDATE cascade,
	id_user integer not null references "USER" (id) on delete cascade on UPDATE cascade,
	PRIMARY KEY (id_film, id_user)
);

CREATE TABLE IF NOT EXISTS GENRE_FILM (
	id_film integer not null references FILM (id) on delete cascade on UPDATE cascade,
	id_genre integer not null references GENRE (id_genre) on delete cascade on UPDATE cascade,
    PRIMARY KEY (id_film, id_genre)
);


CREATE TABLE IF NOT EXISTS FRIENDS (
	id_user integer not null references "USER" (id) on delete cascade on UPDATE cascade,
	id_friend integer not null references "USER" (id) on delete cascade on UPDATE cascade,
    PRIMARY KEY (id_user, id_friend)
);




